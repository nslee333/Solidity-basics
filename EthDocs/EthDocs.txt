
Introduction:

This is going to be my notes and code from going through the Solidity/
Ethereum Documentation.

The plan is to write notes and make sure I understand the material, 
and develop my knowlege as a developer.

//--------------------------------------------------------------------

https://ethereum.org/en/developers/docs/intro-to-ethereum/

Intro to Ethereum.

What is a blockchain?

A Blockchain is a public database that is updated and shared across
many computers in a network.

"Block" refers to data and state being stored in consecutive groups
known as blocks.

If you send Eth to someone else, the transaction data needs to be 
added to a block to be successful.

"Chain" refers to the fact that each block cryptographically 
references its parent. In other words, the blocks are chained together.
The data in a block cannot change without changing all subsequent 
blocks, which would require the consesus of the entire network.

Every computer in the network must agree upon each new Block and the 
chain as a whole. These computers are known as 'Nodes'. Nodes
ensure everyone interacting with the Blockchain has the same data.
To acomplish this distributed agreement, blockchains need a consensus
mechanism.

Ethereum currently uses a proof-of-work consensus mechanism. This 
means that anyone who wants to add new blocks to the chain must
solve a difficult puzzle that requires alot of computing power.

Solving the puzzle 'proves' that you've done the 'work' by using 
computational resources. Doing this is known as mining. Mining is 
typically brute force trial and error, but successfully adding A
block is rewarded in Eth.

New blocks are broadcast to the nodes in the network, checked
and verified, thus updating the state of the blockchain for everyone.

So to summarize, when you send Eth to someone, the transaction must
be mined and included in a new block. The updated state is then shared
with the entire network.

https://www.youtube.com/watch?v=zcX7OJ-L8XQ

//---------------------------

https://www.youtube.com/watch?v=_160oMzblY8&t=30s

SHA256 Hash

A hash looks like a random string of numbers and letters, but 
essentially what it is, is a a digital fingerprint of some digital 
data.

// Entering Personal Note.

// I'm entering my own notes here on SHA256.

SHA256 stands for Secure Hashing Algorithim. 

It is used by IPFS as its main cryptographic hash algorithim, that is
used essentially as a "fingerprint" of the data, or barcode.

SHA256 is determanistic, meaning, that the data that is input into it
it will always get the same hash everytime. 

E.g. I typed in my name 'nathan' into this generator:

https://passwordsgenerator.net/sha256-hash-generator/

and it spit out D2653FF---------------------.

Everytime I go into it, and type the same "nathan" it will always
return the same hash D2653ff.

// Exit Personal Note.

So we've explained how a SHA256 Hash works.

When we use the SHA, we have an input and an output, the data and the
hash.

A block expands the data to three sections:

1. The Block Number.
2. The Nonce.
3. The Data itself.

The Hash includes all of the above data, and it begins with four zeros.

0000xxxxxxxxxxxx

We can gather from this information, is that the four zeros stand for
a 'signed' or valid block.

Whenever we have an "unsigned" block it dosen't have the four zeros.

This is where a nonce comes in.

// Begin personal note:

In the video I'm following, he dosen't explain the concept of a nonce
well, so I found another video that explains it fairly well.

https://www.youtube.com/watch?v=EOgpr73-pgc

Notes for the video:

- The easiest way to explain a Nonce in cyptography is a 
CAPTCHA. 

(CAPTCHA stands for Completely Automated Public Turing Test to tell
Computers and Humans apart, is a type of challenge-response Test used
in computing to determine whether or not the user is human.)

- A nonce is a randomized set of digits (Typically numbers) that is 
used to verify the data that has been submitted, has only been 
submitted once.

- Let's say for example, theres a thing called a replay attack,
a replay attack is when, lets say you're submitting
Identity verification (authentication), like username and password.

In a replay attack is when a third party finds and records
your id and password, and then uses it to gain access to your account
later for what ever purpose, this is a replay attack.

This is why we have CAPTCHA, we use this to stop these type of attacks.

A nonce in Cryptography is an authentication tool that makes sure
that a block that has been submitted into a blockchain for example
has only been submitted once.

In summary, a Nonce (in Cyptography) is something that is created, 
randomized that exists only once, and is used for a specific 
purpose.

// End of personal note.

So the Blockchain basically is a block is connected to its
previous block via the privious blocks Hash, and!

The previous Hash is included in the data that goes through the 
hash algorithim, meaning that it is linked.

If you modify any part of the chain then all the hashes following 
it change, and since the one block also contains the pervious hash 
in the data that runs through the algorithim for the current block
the hash for that block changes as well.

This SHA helps us make this Blockchain immutable.

